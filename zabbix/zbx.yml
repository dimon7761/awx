- name: Python install
  hosts: all
  become: true
  become_method: sudo
  gather_facts: false
  tasks:

    - name: Python install DEB
      raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal)
      ignore_errors: True

    - name: Python install RPM
      raw: test -e /usr/bin/python || (yum install -y python-minimal)
      ignore_errors: True

#    - name: Python 3 install DEB
#      raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3-minimal)
#      ignore_errors: True

#    - name: Python 3 install REDHAD
#      raw: test -e /usr/bin/python3 || (yum -y update && yum install -y python3-minimal)
#      ignore_errors: True
- name: Zabbix agent install
  hosts: all
  become: yes
  become_method: sudo
  gather_facts: true
  vars:
    zabbix_server: "zabbix.dl.loc"
    zabbix_major_version: "4.2"
    zabbix_version: "4.2-1"
    logfile_size: "256"
    enableremotecommands: "1"
    timeout: "3"
  tasks:


#############  PREPARE  #################################################
      # CENTOS/AMAZON
    - name: Removing
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /var/cache/yum/x86_64/7/zabbix
        - /var/cache/yum/x86_64/7/zabbix-non-supported
        - /var/cache/yum/x86_64/7/zabbix-supported
        - /var/cache/yum/x86_64/6/zabbix
        - /var/cache/yum/x86_64/6/zabbix-non-supported
        - /var/cache/yum/x86_64/6/zabbix-supported
        - /etc/zabbix/item_zabbix_device_discovery.json
        - /etc/zabbix/item_zabbix_discovery_filesystems.json
      when: ansible_distribution == 'CentOS' or ansible_distribution == 'Amazon'
      # DEBIAN/UBUNTU
    - name: Removing
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/zabbix/item_zabbix_device_discovery.json
        - /etc/zabbix/item_zabbix_discovery_filesystems.json
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
      # ALL
    - name: Create directory
      file:
        path=/etc/zabbix/zabbix_agentd.conf.d
        state=directory

########### ADD REPO ######################################################

#############  CENTOS  ################

      # CENTOS 6
    - name: Install repo Centos 6
      yum:
        name: https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/rhel/6/x86_64/zabbix-release-{{ zabbix_version }}.el6.noarch.rpm
        state: latest
      when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == '6'
      # CENTOS 7
    - name: Install repo Centos 7
      yum:
        name: https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/rhel/7/x86_64/zabbix-release-{{ zabbix_version }}.el7.noarch.rpm
        state: latest
      when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == '7'
#############  AMAZON  ################
    - set_fact: ansible_distribution_version=1
      when: ansible_distribution == "Amazon" and ansible_distribution_version == "NA"
      # AMAZON 1
    - name: Install repo Amazon 1
      yum:
        name: https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/rhel/6/x86_64/zabbix-release-{{ zabbix_version }}.el6.noarch.rpm
        state: latest
      when: ansible_distribution == 'Amazon' and ansible_distribution_version == '1'
      ignore_errors: True
      # AMAZON 2
    - name: Install repo Amazon 2
      yum:
        name: https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/rhel/7/x86_64/zabbix-release-{{ zabbix_version }}.el7.noarch.rpm
        state: latest
      when: ansible_distribution == 'Amazon' and ansible_distribution_version == '2'
      ignore_errors: True
#############   DEBIAN  ###############
      # DEBIAN 8
    - name: Install repo Debian 8
      apt:
        deb:  https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/debian/pool/main/z/zabbix-release/zabbix-release_{{ zabbix_version }}+jessie_all.deb
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '8'
      # DEBIAN 9
    - name: Install repo Debian 9
      apt:
        deb https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/debian/pool/main/z/zabbix-release/zabbix-release_{{ zabbix_version }}+stretch_all.deb
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '9'
      # DEBIAN 10
    - name: Install repo Debian 10
      apt:
        deb: https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/debian/pool/main/z/zabbix-release/zabbix-release_{{ zabbix_version }}+buster_all.deb
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version == '10'
############   UBUNTU  ################
      # UBUNTU 14x
    - name: Install repo Ubuntu 14x
      apt:
        deb: https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/ubuntu/pool/main/z/zabbix-release/zabbix-release_{{ zabbix_version }}+trusty_all.deb
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '14'
      # UBUNTU 16x
    - name: Install repo Ubuntu 16x
      apt:
        deb: https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/ubuntu/pool/main/z/zabbix-release/zabbix-release_{{ zabbix_version }}+xenial_all.deb
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '16'
      # UBUNTU 18x
    - name: Install repo Ubuntu 18x
      apt:
        deb: https://repo.zabbix.com/zabbix/{{ zabbix_major_version }}/ubuntu/pool/main/z/zabbix-release/zabbix-release_{{ zabbix_version }}+bionic_all.deb
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '18'
############################################################################################

############ INSTALL #######################################################################
     # CENTOS
    - name: Install on Centos
      yum:
        name: zabbix-agent
        state: latest
      when: ansible_distribution == 'CentOS'
     # DEBIAN/UBUNTU
    - name: Install on Debian/Ubuntu
      apt:
        update_cache: yes
        name: zabbix-agent
        state: latest
      when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
     # AMAZON
    - name: Install on Amazon
      yum:
        name: zabbix-agent
        state: latest
      when: ansible_distribution == 'Amazon'
############################################################################################

############ ZABBIX-EXTENSIONS #############################################################

    - name: Copy zabbix-agent-extensions.deb package
      copy:
        src: zabbix-agent-extensions_2.4.32_all.deb
        dest: /tmp
      when: ansible_os_family == "Debian"

    - name: Copy zabbix-agent-extensions-2.4.32-1.noarch.rpm
      copy:
        src: zabbix-agent-extensions-2.4.32-1.noarch.rpm
        dest: /tmp
      when: ansible_os_family == "RedHat"

    - name: Install a agent-extensions.deb package
      apt:
        deb: /tmp/zabbix-agent-extensions_2.4.32_all.deb
      when: ansible_os_family == "Debian"

    - name: Install a agent-extensions.rpm package
      yum:
        name: /tmp/zabbix-agent-extensions-2.4.32-1.noarch.rpm
        state: present
      when: ansible_os_family == "RedHat"

########################################

############# CONFIGURE ################

    - name: Configure LogFileSize
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: '^LogFileSize='
        line: 'LogFileSize={{ logfile_size }}'

    - name: Configure EnableRemoteCommands
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: '^EnableRemoteCommands='
        line: 'EnableRemoteCommands={{ enableremotecommands }}'
      
    - name: Configure Server
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: '^Server='
        line: 'Server={{ zabbix_server }}'
    
    - name: Configure ServerActive
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: '^ServerActive='
        line: 'ServerActive={{ zabbix_server }}'
    
    - name: Configure Hostname
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: '^Hostname='
        line: 'Hostname= {{ ansible_hostname }}.dl.loc'

    - name: Configure Host metadata
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: '^HostMetadata='
        line: 'HostMetadata={{ ansible_hostname }}'
   
    - name: Configure Timeout
      lineinfile:
        path: /etc/zabbix/zabbix_agentd.conf
        regexp: '^Timeout='
        line: 'Timeout={{ timeout }}'

############## RESTART ########################

    - name: Stopping zabbix-agent
      service:
        name=zabbix-agent
        state=stopped
  
    - name: Starting zabbix-agent
      service:
        name=zabbix-agent
        state=started
        enabled=yes

###############################################
